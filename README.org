#+title:  AC de Souza's personal NeoVim config for a Ruby on Rails web developer.
#+author: acdesouza
#+date:   2023-03-25

* NeoVim

  This is my attempt to document my usage of neovim and their Lua plugins.

** Usage

   My primary usage for NeoVim is as a code editor for Ruby on Rails applications.
   My way to use it is to open Vim in the the application's root directory. And, from there, I find the files I want to see and/or change.
   I usually use one window for a task. Splitting it to show each file I need to change for that particular task.


* Installation

  For managing the plugins I will use [[https://github.com/folke/lazy.nvim][lazy.nvim]].
  I don't have any particular reason to use it. It's was just _the first I heard about_ on this NeoVim World.

  #+begin_src bash
  $ mkdir ~/.config/
  $ cd ~/.config/
  $ git clone https://github.com/acdesouza/neovim_config.git ~/.config/nvim
  $ nvim --headless  "+Lazy! install" +qa
  #+end_src


* Customization

  - I will avoid any plugin using other script languages different from the defaults: lua and VimScript
  - I moved the leader key from ~\~ to ~Space~, a.k.a, ~<SPC>~. It's closer to other keys
  - Colorscheme [[https://github.com/catppuccin/nvim][Catppuccin Mocha]]
  - Show line number on cursor's line. And distance from current line in others
  - Sync clipboard with OS. So, you can yank/copy on Vim and paste everywhere
  - Always change tabs to spaces. And a tab is set to 2 spaces
  - Setup wildignore for git, MacOS, node, and Rails

** Plugins

  - [[https://www.vim.org/scripts/script.php?script_id=1075][netrw]] :: Default Vim File Manager customized to a [[http://vimcasts.org/blog/2013/01/oil-and-vinegar-split-windows-and-project-drawer/][card-flip experience, instead of a Project Drawer]].
    - ~<leader>e~: Toggles "flips the card" to show the current dir in netrw as a tree-viewer or current buffer
    - ~gn~: Sets the dir under cursor as treetop
    - ~<Enter>~: Opens file under cursor in the current window. "Flipping the card" back to the "file view"
    - ~d~: Create a new directory in directory selected by ~<Enter>~
    - ~%~: Create a new file in directory selected by ~<Enter>~
    - ~p~: Open a preview of the file under cursor
    - ~Ctrl-w z~: Close file preview
    - ~R~:  Moves/Renames the file/directory under cursor 

  - [[https://vim.fandom.com/wiki/Using_tab_pages][Vim tabs]] :: Just like browser tabs. I use it to concentrate all the files I need to change something. Then I create a new tab for _offtopics_
    - ~<C-t>~: Create a new tab
    - ~gT~ or ~<M-[>~: Move to the Vim tab on the ~left~ of the current one
    - ~gt~ or ~<M-]>~: Move to the Vim tab on the ~right~ of the current one
    - ~{i}gt~: Move to the Vim tab on position {i}
